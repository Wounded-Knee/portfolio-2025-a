name: Deploy to S3 + CloudFront

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: us-east-2
  S3_BUCKET: portfolio-2025-a
  CF_DIST_ID: EX5MCKL196HD7
  BUILD_DIR: out         # change to 'dist' if not using next export

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install deps
        run: npm ci

      # If using Next.js static export, make sure you have:
      #   next.config.js => module.exports = { output: 'export' }
      #   package.json   => "export": "next export -o out"
      - name: Build
        run: |
          set -e
          npm run build

      - name: Verify build output
        run: |
          test -d out || { echo "No 'out' dir found"; exit 1; }
          find out -maxdepth 2 -type f | head -n 50
  
      # --- Install AWS CLI v2 ---
      - name: Install AWS CLI v2
        run: |
          set -e
          curl -sS "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip -q awscliv2.zip
          sudo ./aws/install --update
          aws --version

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::783764607292:role/github-actions-deploy-s3-cloudfront
          aws-region: ${{ env.AWS_REGION }}

      - name: Verify caller identity
        run: aws sts get-caller-identity

      - name: Validate build output exists
        run: |
          set -e
          if [ ! -d "$BUILD_DIR" ]; then
            echo "::error ::Build directory '$BUILD_DIR' not found. Set BUILD_DIR correctly (e.g., out or dist)."
            ls -la
            exit 1
          fi
          echo "Found $BUILD_DIR:"
          find "$BUILD_DIR" -maxdepth 2 -type f | head -n 50

      - name: Sync static assets (long cache)
        run: |
          aws s3 sync "$BUILD_DIR" "s3://$S3_BUCKET/" \
            --delete \
            --exclude "*.html" \
            --cache-control "public,max-age=31536000,immutable"

      - name: Upload HTML (no-cache + correct MIME)
        run: |
          shopt -s nullglob
          mapfile -t HTMLS < <(find "$BUILD_DIR" -name "*.html")
          if [ ${#HTMLS[@]} -eq 0 ]; then
            echo "::warning ::No HTML files found; skipping HTML upload."
          else
            for f in "${HTMLS[@]}"; do
              key="${f#$BUILD_DIR/}"
              aws s3 cp "$f" "s3://$S3_BUCKET/$key" \
                --cache-control "no-cache" \
                --content-type "text/html; charset=utf-8"
            done
          fi

      - name: Invalidate CloudFront
        run: |
          aws cloudfront create-invalidation \
            --distribution-id "$CF_DIST_ID" \
            --paths "/*"
